{
  "csharp": {
    "import": {
      "default": "using Algolia.Search.Clients;\nusing Algolia.Search.Models.QuerySuggestions;"
    },
    "createConfig": {
      "default": "var response = await client.CreateConfigAsync(\n  new ConfigurationWithIndex\n  {\n    IndexName = \"<YOUR_INDEX_NAME>\",\n    SourceIndices = new List<SourceIndex>\n    {\n      new SourceIndex\n      {\n        IndexName = \"<YOUR_INDEX_NAME>\",\n        Facets = new List<Facet> { new Facet { Attribute = \"test\" } },\n        Generate = new List<List<string>>\n        {\n          new List<string> { \"facetA\", \"facetB\" },\n          new List<string> { \"facetC\" },\n        },\n      },\n    },\n    Languages = new Languages(new List<string> { \"french\" }),\n    Exclude = new List<string> { \"test\" },\n  }\n);",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "var response = await client.CustomDeleteAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "var response = await client.CustomGetAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "var response = await client.CustomPostAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "var response = await client.CustomPutAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "var response = await client.DeleteConfigAsync(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "var response = await client.GetAllConfigsAsync();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "var response = await client.GetConfigAsync(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "var response = await client.GetConfigStatusAsync(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "var response = await client.GetLogFileAsync(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.SetClientApiKey(\"updated-api-key\");",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "var response = await client.UpdateConfigAsync(\n  \"<YOUR_INDEX_NAME>\",\n  new Configuration\n  {\n    SourceIndices = new List<SourceIndex>\n    {\n      new SourceIndex\n      {\n        IndexName = \"<YOUR_INDEX_NAME>\",\n        Facets = new List<Facet> { new Facet { Attribute = \"test\" } },\n        Generate = new List<List<string>>\n        {\n          new List<string> { \"facetA\", \"facetB\" },\n          new List<string> { \"facetC\" },\n        },\n      },\n    },\n    Languages = new Languages(new List<string> { \"french\" }),\n    Exclude = new List<string> { \"test\" },\n  }\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "var client = new QuerySuggestionsClient(\n  new QuerySuggestionsConfig(\n    \"ALGOLIA_APPLICATION_ID\",\n    \"ALGOLIA_API_KEY\",\n    \"ALGOLIA_APPLICATION_REGION\"\n  )\n);"
    }
  },
  "dart": {},
  "go": {
    "import": {
      "default": "import suggestions \"github.com/algolia/algoliasearch-client-go/v4/algolia/query-suggestions\""
    },
    "createConfig": {
      "default": "response, err := client.CreateConfig(client.NewApiCreateConfigRequest(\n\n  suggestions.NewEmptyConfigurationWithIndex().SetIndexName(\"<YOUR_INDEX_NAME>\").SetSourceIndices(\n    []suggestions.SourceIndex{*suggestions.NewEmptySourceIndex().SetIndexName(\"<YOUR_INDEX_NAME>\").SetFacets(\n      []suggestions.Facet{*suggestions.NewEmptyFacet().SetAttribute(\"test\")}).SetGenerate(\n      [][]string{\n        []string{\"facetA\", \"facetB\"},\n        []string{\"facetC\"}})}).SetLanguages(suggestions.ArrayOfStringAsLanguages(\n    []string{\"french\"})).SetExclude(\n    []string{\"test\"}),\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response, err := client.CustomGet(client.NewApiCustomGetRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response, err := client.CustomPost(client.NewApiCustomPostRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response, err := client.CustomPut(client.NewApiCustomPutRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "response, err := client.DeleteConfig(client.NewApiDeleteConfigRequest(\n  \"<YOUR_INDEX_NAME>\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "response, err := client.GetAllConfigs()\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "response, err := client.GetConfig(client.NewApiGetConfigRequest(\n  \"<YOUR_INDEX_NAME>\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "response, err := client.GetConfigStatus(client.NewApiGetConfigStatusRequest(\n  \"<YOUR_INDEX_NAME>\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "response, err := client.GetLogFile(client.NewApiGetLogFileRequest(\n  \"<YOUR_INDEX_NAME>\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "err = client.SetClientApiKey(\n  \"updated-api-key\",\n)\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "response, err := client.UpdateConfig(client.NewApiUpdateConfigRequest(\n  \"<YOUR_INDEX_NAME>\",\n  suggestions.NewEmptyConfiguration().SetSourceIndices(\n    []suggestions.SourceIndex{*suggestions.NewEmptySourceIndex().SetIndexName(\"<YOUR_INDEX_NAME>\").SetFacets(\n      []suggestions.Facet{*suggestions.NewEmptyFacet().SetAttribute(\"test\")}).SetGenerate(\n      [][]string{\n        []string{\"facetA\", \"facetB\"},\n        []string{\"facetC\"}})}).SetLanguages(suggestions.ArrayOfStringAsLanguages(\n    []string{\"french\"})).SetExclude(\n    []string{\"test\"}),\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "client, err := suggestions.NewClient(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\", suggestions.US)\nif err != nil {\n  // The client can fail to initialize if you pass an invalid parameter.\n  panic(err)\n}"
    }
  },
  "java": {
    "import": {
      "default": "import com.algolia.api.QuerySuggestionsClient;\nimport com.algolia.model.querysuggestions.*;"
    },
    "createConfig": {
      "default": "client.createConfig(\n  new ConfigurationWithIndex()\n    .setIndexName(\"<YOUR_INDEX_NAME>\")\n    .setSourceIndices(\n      Arrays.asList(\n        new SourceIndex()\n          .setIndexName(\"<YOUR_INDEX_NAME>\")\n          .setFacets(Arrays.asList(new Facet().setAttribute(\"test\")))\n          .setGenerate(Arrays.asList(Arrays.asList(\"facetA\", \"facetB\"), Arrays.asList(\"facetC\")))\n      )\n    )\n    .setLanguages(Languages.of(Arrays.asList(\"french\")))\n    .setExclude(Arrays.asList(\"test\"))\n);",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "client.customDelete(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "client.customGet(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "client.customPost(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "client.customPut(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "client.deleteConfig(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "client.getAllConfigs();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "client.getConfig(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "client.getConfigStatus(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "client.getLogFile(\"<YOUR_INDEX_NAME>\");",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey(\"updated-api-key\");",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "client.updateConfig(\n  \"<YOUR_INDEX_NAME>\",\n  new Configuration()\n    .setSourceIndices(\n      Arrays.asList(\n        new SourceIndex()\n          .setIndexName(\"<YOUR_INDEX_NAME>\")\n          .setFacets(Arrays.asList(new Facet().setAttribute(\"test\")))\n          .setGenerate(Arrays.asList(Arrays.asList(\"facetA\", \"facetB\"), Arrays.asList(\"facetC\")))\n      )\n    )\n    .setLanguages(Languages.of(Arrays.asList(\"french\")))\n    .setExclude(Arrays.asList(\"test\"))\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "QuerySuggestionsClient client = new QuerySuggestionsClient(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\", \"ALGOLIA_APPLICATION_REGION\");"
    }
  },
  "javascript": {
    "import": {
      "default": "import { algoliasearch } from 'algoliasearch';"
    },
    "createConfig": {
      "default": "const response = await client.createConfig({\n  indexName: 'theIndexName',\n  sourceIndices: [\n    { indexName: 'testIndex', facets: [{ attribute: 'test' }], generate: [['facetA', 'facetB'], ['facetC']] },\n  ],\n  languages: ['french'],\n  exclude: ['test'],\n});",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "const response = await client.customDelete({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "const response = await client.customGet({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "const response = await client.customPost({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "const response = await client.customPut({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "const response = await client.deleteConfig({ indexName: 'theIndexName' });",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "const response = await client.getAllConfigs();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "const response = await client.getConfig({ indexName: 'cts_e2e_browse_query_suggestions' });",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "const response = await client.getConfigStatus({ indexName: 'theIndexName' });",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "const response = await client.getLogFile({ indexName: 'theIndexName' });",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey({ apiKey: 'updated-api-key' });",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "const response = await client.updateConfig({\n  indexName: 'theIndexName',\n  configuration: {\n    sourceIndices: [\n      { indexName: 'testIndex', facets: [{ attribute: 'test' }], generate: [['facetA', 'facetB'], ['facetC']] },\n    ],\n    languages: ['french'],\n    exclude: ['test'],\n  },\n});",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "// Replace 'us' with your Algolia Application Region\nconst client = algoliasearch('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY').initQuerySuggestions({ region: 'us' });"
    }
  },
  "kotlin": {
    "import": {
      "default": "import com.algolia.client.api.QuerySuggestionsClient"
    },
    "createConfig": {
      "default": "var response = client.createConfig(\n  configurationWithIndex = ConfigurationWithIndex(\n    indexName = \"<YOUR_INDEX_NAME>\",\n    sourceIndices = listOf(\n      SourceIndex(\n        indexName = \"<YOUR_INDEX_NAME>\",\n        facets = listOf(\n          Facet(\n            attribute = \"test\",\n          ),\n        ),\n        generate = listOf(listOf(\"facetA\", \"facetB\"), listOf(\"facetC\")),\n      ),\n    ),\n    languages = Languages.of(listOf(\"french\")),\n    exclude = listOf(\"test\"),\n  ),\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "var response = client.customDelete(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "var response = client.customGet(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "var response = client.customPost(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "var response = client.customPut(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "var response = client.deleteConfig(\n  indexName = \"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "var response = client.getAllConfigs()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "var response = client.getConfig(\n  indexName = \"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "var response = client.getConfigStatus(\n  indexName = \"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "var response = client.getLogFile(\n  indexName = \"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey(\n  apiKey = \"updated-api-key\",\n)",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "var response = client.updateConfig(\n  indexName = \"<YOUR_INDEX_NAME>\",\n  configuration = Configuration(\n    sourceIndices = listOf(\n      SourceIndex(\n        indexName = \"<YOUR_INDEX_NAME>\",\n        facets = listOf(\n          Facet(\n            attribute = \"test\",\n          ),\n        ),\n        generate = listOf(listOf(\"facetA\", \"facetB\"), listOf(\"facetC\")),\n      ),\n    ),\n    languages = Languages.of(listOf(\"french\")),\n    exclude = listOf(\"test\"),\n  ),\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "val client = QuerySuggestionsClient(appId = \"ALGOLIA_APPLICATION_ID\", apiKey = \"ALGOLIA_API_KEY\", region = \"ALGOLIA_APPLICATION_REGION\")"
    }
  },
  "php": {
    "import": {
      "default": "use Algolia\\AlgoliaSearch\\Api\\QuerySuggestionsClient;"
    },
    "createConfig": {
      "default": "$response = $client->createConfig(\n    ['indexName' => '<YOUR_INDEX_NAME>',\n        'sourceIndices' => [\n            ['indexName' => '<YOUR_INDEX_NAME>',\n                'facets' => [\n                    ['attribute' => 'test',\n                    ],\n                ],\n                'generate' => [\n                    [\n                        'facetA',\n\n                        'facetB',\n                    ],\n\n                    [\n                        'facetC',\n                    ],\n                ],\n            ],\n        ],\n        'languages' => [\n            'french',\n        ],\n        'exclude' => [\n            'test',\n        ],\n    ],\n);",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "$response = $client->customDelete(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "$response = $client->customGet(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "$response = $client->customPost(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "$response = $client->customPut(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "$response = $client->deleteConfig(\n    '<YOUR_INDEX_NAME>',\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "$response = $client->getAllConfigs();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "$response = $client->getConfig(\n    '<YOUR_INDEX_NAME>',\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "$response = $client->getConfigStatus(\n    '<YOUR_INDEX_NAME>',\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "$response = $client->getLogFile(\n    '<YOUR_INDEX_NAME>',\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "$client->setClientApiKey(\n    'updated-api-key',\n);",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "$response = $client->updateConfig(\n    '<YOUR_INDEX_NAME>',\n    ['sourceIndices' => [\n        ['indexName' => '<YOUR_INDEX_NAME>',\n            'facets' => [\n                ['attribute' => 'test',\n                ],\n            ],\n            'generate' => [\n                [\n                    'facetA',\n\n                    'facetB',\n                ],\n\n                [\n                    'facetC',\n                ],\n            ],\n        ],\n    ],\n        'languages' => [\n            'french',\n        ],\n        'exclude' => [\n            'test',\n        ],\n    ],\n);",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "$client = QuerySuggestionsClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY', 'ALGOLIA_APPLICATION_REGION');"
    }
  },
  "python": {
    "import": {
      "default": "from algoliasearch.query_suggestions.client import QuerySuggestionsClientSync"
    },
    "createConfig": {
      "default": "response = client.create_config(\n    configuration_with_index={\n        \"indexName\": \"<YOUR_INDEX_NAME>\",\n        \"sourceIndices\": [\n            {\n                \"indexName\": \"<YOUR_INDEX_NAME>\",\n                \"facets\": [\n                    {\n                        \"attribute\": \"test\",\n                    },\n                ],\n                \"generate\": [\n                    [\n                        \"facetA\",\n                        \"facetB\",\n                    ],\n                    [\n                        \"facetC\",\n                    ],\n                ],\n            },\n        ],\n        \"languages\": [\n            \"french\",\n        ],\n        \"exclude\": [\n            \"test\",\n        ],\n    },\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "response = client.custom_delete(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response = client.custom_get(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response = client.custom_post(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response = client.custom_put(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "response = client.delete_config(\n    index_name=\"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "response = client.get_all_configs()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "response = client.get_config(\n    index_name=\"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "response = client.get_config_status(\n    index_name=\"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "response = client.get_log_file(\n    index_name=\"<YOUR_INDEX_NAME>\",\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.set_client_api_key(\n    api_key=\"updated-api-key\",\n)",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "response = client.update_config(\n    index_name=\"<YOUR_INDEX_NAME>\",\n    configuration={\n        \"sourceIndices\": [\n            {\n                \"indexName\": \"<YOUR_INDEX_NAME>\",\n                \"facets\": [\n                    {\n                        \"attribute\": \"test\",\n                    },\n                ],\n                \"generate\": [\n                    [\n                        \"facetA\",\n                        \"facetB\",\n                    ],\n                    [\n                        \"facetC\",\n                    ],\n                ],\n            },\n        ],\n        \"languages\": [\n            \"french\",\n        ],\n        \"exclude\": [\n            \"test\",\n        ],\n    },\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "# In an asynchronous context, you can use QuerySuggestionsClient instead, which exposes the exact same methods.\nclient = QuerySuggestionsClientSync(\n    \"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\", \"ALGOLIA_APPLICATION_REGION\"\n)"
    }
  },
  "ruby": {
    "import": {
      "default": "require \"algolia\""
    },
    "createConfig": {
      "default": "response = client.create_config(\n  Algolia::QuerySuggestions::ConfigurationWithIndex.new(\n    index_name: \"<YOUR_INDEX_NAME>\",\n    source_indices: [\n      Algolia::QuerySuggestions::SourceIndex.new(\n        index_name: \"<YOUR_INDEX_NAME>\",\n        facets: [Algolia::QuerySuggestions::Facet.new(attribute: \"test\")],\n        generate: [[\"facetA\", \"facetB\"], [\"facetC\"]]\n      )\n    ],\n    languages: [\"french\"],\n    exclude: [\"test\"]\n  )\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "response = client.custom_delete(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response = client.custom_get(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response = client.custom_post(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response = client.custom_put(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "response = client.delete_config(\"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "response = client.get_all_configs",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "response = client.get_config(\"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "response = client.get_config_status(\"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "response = client.get_log_file(\"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.set_client_api_key(\"updated-api-key\")",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "response = client.update_config(\n  \"<YOUR_INDEX_NAME>\",\n  Algolia::QuerySuggestions::Configuration.new(\n    source_indices: [\n      Algolia::QuerySuggestions::SourceIndex.new(\n        index_name: \"<YOUR_INDEX_NAME>\",\n        facets: [Algolia::QuerySuggestions::Facet.new(attribute: \"test\")],\n        generate: [[\"facetA\", \"facetB\"], [\"facetC\"]]\n      )\n    ],\n    languages: [\"french\"],\n    exclude: [\"test\"]\n  )\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "client = Algolia::QuerySuggestionsClient.create(\n  \"ALGOLIA_APPLICATION_ID\",\n  \"ALGOLIA_API_KEY\",\n  \"ALGOLIA_APPLICATION_REGION\"\n)"
    }
  },
  "scala": {
    "import": {
      "default": "import algoliasearch.api.QuerySuggestionsClient"
    },
    "createConfig": {
      "default": "val response = client.createConfig(\n  configurationWithIndex = ConfigurationWithIndex(\n    indexName = \"<YOUR_INDEX_NAME>\",\n    sourceIndices = Seq(\n      SourceIndex(\n        indexName = \"<YOUR_INDEX_NAME>\",\n        facets = Some(\n          Seq(\n            Facet(\n              attribute = Some(\"test\")\n            )\n          )\n        ),\n        generate = Some(Seq(Seq(\"facetA\", \"facetB\"), Seq(\"facetC\")))\n      )\n    ),\n    languages = Some(Languages(Seq(\"french\"))),\n    exclude = Some(Seq(\"test\"))\n  )\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "val response = client.customDelete[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "val response = client.customGet[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "val response = client.customPost[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "val response = client.customPut[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "val response = client.deleteConfig(\n  indexName = \"<YOUR_INDEX_NAME>\"\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "val response = client.getAllConfigs(\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "val response = client.getConfig(\n  indexName = \"<YOUR_INDEX_NAME>\"\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "val response = client.getConfigStatus(\n  indexName = \"<YOUR_INDEX_NAME>\"\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "val response = client.getLogFile(\n  indexName = \"<YOUR_INDEX_NAME>\"\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "updateConfig": {
      "default": "val response = client.updateConfig(\n  indexName = \"<YOUR_INDEX_NAME>\",\n  configuration = Configuration(\n    sourceIndices = Seq(\n      SourceIndex(\n        indexName = \"<YOUR_INDEX_NAME>\",\n        facets = Some(\n          Seq(\n            Facet(\n              attribute = Some(\"test\")\n            )\n          )\n        ),\n        generate = Some(Seq(Seq(\"facetA\", \"facetB\"), Seq(\"facetC\")))\n      )\n    ),\n    languages = Some(Languages(Seq(\"french\"))),\n    exclude = Some(Seq(\"test\"))\n  )\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "val client = QuerySuggestionsClient(\n  appId = \"ALGOLIA_APPLICATION_ID\",\n  apiKey = \"ALGOLIA_API_KEY\",\n  region = \"ALGOLIA_APPLICATION_REGION\"\n)"
    }
  },
  "swift": {
    "import": {
      "default": "import QuerySuggestions"
    },
    "createConfig": {
      "default": "let response = try await client.createConfig(configurationWithIndex: ConfigurationWithIndex(\n    sourceIndices: [SourceIndex(\n        indexName: \"<YOUR_INDEX_NAME>\",\n        facets: [Facet(attribute: \"test\")],\n        generate: [[\"facetA\", \"facetB\"], [\"facetC\"]]\n    )],\n    languages: QuerySuggestionsLanguages.arrayOfString([\"french\"]),\n    exclude: [\"test\"],\n    indexName: \"<YOUR_INDEX_NAME>\"\n))",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was created, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Unprocessable Entity.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "UnprocessableEntity": {
                  "summary": "Configuration already exists",
                  "value": {
                    "status": 422,
                    "message": "Configuration already exists for index: test-qs"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal error.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customDelete": {
      "default": "let response = try await client.customDelete(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "let response = try await client.customGet(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "let response = try await client.customPost(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "let response = try await client.customPut(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteConfig": {
      "default": "let response = try await client.deleteConfig(indexName: \"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was deleted with success."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAllConfigs": {
      "default": "let response = try await client.getAllConfigs()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "API response for retrieving Query Suggestions configurations.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "appID": {
                          "type": "string",
                          "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Query Suggestions configuration.",
                      "required": [
                        "indexName",
                        "sourceIndices"
                      ],
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "indexName": {
                              "title": "indexName",
                              "type": "string",
                              "description": "Name of the Query Suggestions index (case-sensitive).",
                              "example": "products_query_suggestions"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Query Suggestions configuration.",
                          "required": [
                            "sourceIndices"
                          ],
                          "properties": {
                            "sourceIndices": {
                              "type": "array",
                              "description": "Algolia indices from which to get the popular searches for query suggestions.",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Configuration of an Algolia index for Query Suggestions.",
                                "required": [
                                  "indexName"
                                ],
                                "properties": {
                                  "indexName": {
                                    "type": "string",
                                    "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                    "example": "products"
                                  },
                                  "replicas": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                    "example": false
                                  },
                                  "analyticsTags": {
                                    "title": "analyticsTags",
                                    "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "facets": {
                                    "title": "facets",
                                    "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Facet to use as category.",
                                          "properties": {
                                            "attribute": {
                                              "type": "string",
                                              "description": "Facet name."
                                            },
                                            "amount": {
                                              "type": "integer",
                                              "description": "Number of suggestions."
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      {
                                        "attribute": "category",
                                        "amount": 3
                                      },
                                      {
                                        "attribute": "brand",
                                        "amount": 2
                                      }
                                    ]
                                  },
                                  "minHits": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 5,
                                    "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                  },
                                  "minLetters": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 4,
                                    "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                  },
                                  "generate": {
                                    "title": "generate",
                                    "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "example": [
                                      [
                                        "color",
                                        "brand"
                                      ]
                                    ]
                                  },
                                  "external": {
                                    "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                    "default": null,
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "languages": {
                              "title": "languages",
                              "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                              "default": false,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "description": "Languages for which to deduplicate singular and plural forms.",
                                  "items": {
                                    "type": "string",
                                    "description": "Two-letter country code."
                                  }
                                },
                                {
                                  "type": "boolean",
                                  "description": "If true, deduplication is enabled for all languages."
                                }
                              ]
                            },
                            "exclude": {
                              "title": "exclude",
                              "description": "Words or regular expressions to exclude from the suggestions.",
                              "default": null,
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "enablePersonalization": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to turn on personalized query suggestions."
                            },
                            "allowSpecialCharacters": {
                              "type": "boolean",
                              "default": false,
                              "description": "Whether to include suggestions with special characters."
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "required": [
                    "appID",
                    "allowSpecialCharacters",
                    "enablePersonalization",
                    "exclude",
                    "languages",
                    "sourceIndices"
                  ]
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfig": {
      "default": "let response = try await client.getConfig(indexName: \"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "API response for retrieving Query Suggestions configurations.",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "appID": {
                        "type": "string",
                        "description": "Algolia application ID to which this Query Suggestions configuration belongs."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "Query Suggestions configuration.",
                    "required": [
                      "indexName",
                      "sourceIndices"
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "indexName": {
                            "title": "indexName",
                            "type": "string",
                            "description": "Name of the Query Suggestions index (case-sensitive).",
                            "example": "products_query_suggestions"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Query Suggestions configuration.",
                        "required": [
                          "sourceIndices"
                        ],
                        "properties": {
                          "sourceIndices": {
                            "type": "array",
                            "description": "Algolia indices from which to get the popular searches for query suggestions.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "Configuration of an Algolia index for Query Suggestions.",
                              "required": [
                                "indexName"
                              ],
                              "properties": {
                                "indexName": {
                                  "type": "string",
                                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                                  "example": "products"
                                },
                                "replicas": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                                  "example": false
                                },
                                "analyticsTags": {
                                  "title": "analyticsTags",
                                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "facets": {
                                  "title": "facets",
                                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Facet to use as category.",
                                        "properties": {
                                          "attribute": {
                                            "type": "string",
                                            "description": "Facet name."
                                          },
                                          "amount": {
                                            "type": "integer",
                                            "description": "Number of suggestions."
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    {
                                      "attribute": "category",
                                      "amount": 3
                                    },
                                    {
                                      "attribute": "brand",
                                      "amount": 2
                                    }
                                  ]
                                },
                                "minHits": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 5,
                                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                                },
                                "minLetters": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "default": 4,
                                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                                },
                                "generate": {
                                  "title": "generate",
                                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "example": [
                                    [
                                      "color",
                                      "brand"
                                    ]
                                  ]
                                },
                                "external": {
                                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                                  "default": null,
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "languages": {
                            "title": "languages",
                            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
                            "default": false,
                            "oneOf": [
                              {
                                "type": "array",
                                "description": "Languages for which to deduplicate singular and plural forms.",
                                "items": {
                                  "type": "string",
                                  "description": "Two-letter country code."
                                }
                              },
                              {
                                "type": "boolean",
                                "description": "If true, deduplication is enabled for all languages."
                              }
                            ]
                          },
                          "exclude": {
                            "title": "exclude",
                            "description": "Words or regular expressions to exclude from the suggestions.",
                            "default": null,
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "enablePersonalization": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to turn on personalized query suggestions."
                          },
                          "allowSpecialCharacters": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to include suggestions with special characters."
                          }
                        }
                      }
                    ]
                  }
                ],
                "required": [
                  "appID",
                  "allowSpecialCharacters",
                  "enablePersonalization",
                  "exclude",
                  "languages",
                  "sourceIndices"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "IndexNameRequired": {
                  "summary": "Index name required",
                  "value": {
                    "status": 400,
                    "message": "IndexName cannot be empty."
                  }
                },
                "SourceIndicesRequired": {
                  "summary": "Source indices required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"sourceIndices needs to contain at least one index\"."
                  }
                },
                "SourceIndexNameRequired": {
                  "summary": "Source index name required",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index must have an `indexName`\"."
                  }
                },
                "MinHitsPositive": {
                  "summary": "MinHits must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minHits` must be positive\"."
                  }
                },
                "MinLettersPositive": {
                  "summary": "MinLetters must be positive",
                  "value": {
                    "status": 400,
                    "message": "Invalid body \"every source index `minLetters` must be positive\"."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getConfigStatus": {
      "default": "let response = try await client.getConfigStatus(indexName: \"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "configStatus",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "indexName": {
                    "title": "indexName",
                    "type": "string",
                    "description": "Name of the Query Suggestions index (case-sensitive).",
                    "example": "products_query_suggestions"
                  },
                  "isRunning": {
                    "type": "boolean",
                    "description": "Whether the creation or update of the Query Suggestions index is in progress.",
                    "example": false
                  },
                  "lastBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last built, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuiltAt": {
                    "type": "string",
                    "description": "Date and time when the Query Suggestions index was last updated successfully.",
                    "example": "2023-07-05T08:03:53Z"
                  },
                  "lastSuccessfulBuildDuration": {
                    "type": "string",
                    "description": "Duration of the last successful build in seconds.",
                    "example": 28
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLogFile": {
      "default": "let response = try await client.getLogFile(indexName: \"<YOUR_INDEX_NAME>\")",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "logFile",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time of the log entry, in RFC 3339 format.",
                    "example": "2023-07-05T08:03:33.898076171Z"
                  },
                  "level": {
                    "title": "level",
                    "type": "string",
                    "description": "Type of log entry.\n\n- `SKIP`. A query is skipped because it doesn't match the conditions for successful inclusion. For example, when a query doesn't generate enough search results.\n- `INFO`. An informative log entry.\n- `ERROR`. The Query Suggestions process encountered an error.\n",
                    "enum": [
                      "SKIP",
                      "INFO",
                      "ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about this log entry.",
                    "example": "skipping query \"Brooke Adams\": not enough search results, got 1, expected 5"
                  },
                  "contextLevel": {
                    "type": "integer",
                    "description": "Level indicating the position of a suggestion in a hierarchy of records.\n\nFor example, a `contextLevel` of 1 indicates that this suggestion belongs to a previous suggestion with `contextLevel` 0.\n",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "NotFound": {
                  "summary": "Index not found",
                  "value": {
                    "status": 404,
                    "message": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "try client.setClientApiKey(apiKey: \"updated-api-key\")",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "updateConfig": {
      "default": "let response = try await client.updateConfig(\n    indexName: \"<YOUR_INDEX_NAME>\",\n    configuration: QuerySuggestionsConfiguration(\n        sourceIndices: [SourceIndex(\n            indexName: \"<YOUR_INDEX_NAME>\",\n            facets: [Facet(attribute: \"test\")],\n            generate: [[\"facetA\", \"facetB\"], [\"facetC\"]]\n        )],\n        languages: QuerySuggestionsLanguages.arrayOfString([\"french\"]),\n        exclude: [\"test\"]\n    )\n)",
      "parameters": [
        {
          "name": "indexName",
          "in": "path",
          "required": true,
          "description": "Query Suggestions index name.",
          "schema": {
            "title": "indexName",
            "type": "string",
            "description": "Name of the Query Suggestions index (case-sensitive).",
            "example": "products_query_suggestions"
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        },
        {
          "sourceIndices": {
            "type": "array",
            "description": "Algolia indices from which to get the popular searches for query suggestions.",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "Configuration of an Algolia index for Query Suggestions.",
              "required": [
                "indexName"
              ],
              "properties": {
                "indexName": {
                  "type": "string",
                  "description": "Name of the Algolia index (case-sensitive) to use as source for query suggestions.",
                  "example": "products"
                },
                "replicas": {
                  "type": "boolean",
                  "default": false,
                  "description": "If true, Query Suggestions uses all replica indices to find popular searches.\nIf false, only the primary index is used.\n",
                  "example": false
                },
                "analyticsTags": {
                  "title": "analyticsTags",
                  "description": "Analytics tags for filtering the popular searches.\nFor more information, see [Segment your analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "facets": {
                  "title": "facets",
                  "description": "Facets to use as top categories with your suggestions.\n\nIf provided, Query Suggestions adds the top facet values to each suggestion.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Facet to use as category.",
                        "properties": {
                          "attribute": {
                            "type": "string",
                            "description": "Facet name."
                          },
                          "amount": {
                            "type": "integer",
                            "description": "Number of suggestions."
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    {
                      "attribute": "category",
                      "amount": 3
                    },
                    {
                      "attribute": "brand",
                      "amount": 2
                    }
                  ]
                },
                "minHits": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 5,
                  "description": "Minimum number of hits required to be included as a suggestion.\n\nA search query must at least generate `minHits` search results to be included in the Query Suggestions index.\n"
                },
                "minLetters": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 4,
                  "description": "Minimum letters required to be included as a suggestion.\n\nA search query must be at least `minLetters` long to be included in the Query Suggestions index.\n"
                },
                "generate": {
                  "title": "generate",
                  "description": "Facets used for generating query suggestions from facet values.\n\nFor example, if you set `generate: [\"color\", \"brand\"]`, combinations from the facet values are added as query suggestions,\nsuch as \"blue adidas\", \"red adidas\", \"blue nike\", \"red nike\", etc.\n\nYou can include nested lists.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": [
                    [
                      "color",
                      "brand"
                    ]
                  ]
                },
                "external": {
                  "description": "Algolia indices with popular searches to use as query suggestions.\n\nRecords of these indices must have these attributes:\n\n- `query`: search query which will be added as a suggestion\n- `count`: measure of popularity of that search query\n\nFor example, you can export popular searches from an external analytics provider, such as Google Analytics or Adobe Analytics,\nand feed this data into an Algolia index.\nYou can use this index to generate query suggestions until your Algolia Analytics has collected enough data.\n",
                  "default": null,
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "languages": {
            "title": "languages",
            "description": "Languages for deduplicating singular and plural suggestions.\nIf specified, only the more popular form is included.\n",
            "default": false,
            "oneOf": [
              {
                "type": "array",
                "description": "Languages for which to deduplicate singular and plural forms.",
                "items": {
                  "type": "string",
                  "description": "Two-letter country code."
                }
              },
              {
                "type": "boolean",
                "description": "If true, deduplication is enabled for all languages."
              }
            ]
          },
          "exclude": {
            "title": "exclude",
            "description": "Words or regular expressions to exclude from the suggestions.",
            "default": null,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "enablePersonalization": {
            "type": "boolean",
            "default": false,
            "description": "Whether to turn on personalized query suggestions."
          },
          "allowSpecialCharacters": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include suggestions with special characters."
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Created": {
                  "summary": "Configuration created",
                  "value": {
                    "status": 200,
                    "message": "Configuration was updated, and a new indexing job has been scheduled."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Wrong region",
                  "description": "Make sure to make your request to the server corresponding to your region.\n\nYou can check the region for your application in the [Algolia dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).\n",
                  "value": {
                    "status": 401,
                    "message": "The log processing region does not match."
                  }
                },
                "InvalidCredentials": {
                  "summary": "Invalid credentials",
                  "description": "Your application ID or API key is wrong.",
                  "value": {
                    "status": 401,
                    "message": "Invalid credentials"
                  }
                },
                "MissingACL": {
                  "summary": "Key is missing ACL",
                  "description": "Your API key is missing the required ACL for this operation.",
                  "value": {
                    "status": 401,
                    "message": "The provided API key is missing the \\\"editSettings\\\" ACL."
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP status code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Details about the response, such as error messages."
                  }
                }
              },
              "examples": {
                "Error": {
                  "description": "This error can happen if you use a non-existing `indexName` as a path parameter when trying to update or delete a Query Suggestions configuration.",
                  "value": {
                    "status": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "let client = try QuerySuggestionsClient(appID: \"ALGOLIA_APPLICATION_ID\", apiKey: \"ALGOLIA_API_KEY\", region: .us)"
    }
  }
}