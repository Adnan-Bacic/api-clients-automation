{
  "csharp": {
    "import": {
      "default": "using Algolia.Search.Clients;\nusing Algolia.Search.Models.Monitoring;"
    },
    "customDelete": {
      "default": "var response = await client.CustomDeleteAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "var response = await client.CustomGetAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "var response = await client.CustomPostAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "var response = await client.CustomPutAsync(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "var response = await client.GetClusterIncidentsAsync(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "var response = await client.GetClusterStatusAsync(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "var response = await client.GetIncidentsAsync();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "var response = await client.GetIndexingTimeAsync(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "var response = await client.GetLatencyAsync(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "var response = await client.GetMetricsAsync(\n  Enum.Parse<Metric>(\"AvgBuildTime\"),\n  Enum.Parse<Period>(\"Minute\")\n);",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "var response = await client.GetReachabilityAsync(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "var response = await client.GetServersAsync();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "var response = await client.GetStatusAsync();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.SetClientApiKey(\"updated-api-key\");",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "var client = new MonitoringClient(\n  new MonitoringConfig(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\")\n);"
    }
  },
  "dart": {},
  "go": {
    "import": {
      "default": "import \"github.com/algolia/algoliasearch-client-go/v4/algolia/monitoring\""
    },
    "customDelete": {
      "default": "response, err := client.CustomDelete(client.NewApiCustomDeleteRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response, err := client.CustomGet(client.NewApiCustomGetRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response, err := client.CustomPost(client.NewApiCustomPostRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response, err := client.CustomPut(client.NewApiCustomPutRequest(\n  \"test/minimal\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "response, err := client.GetClusterIncidents(client.NewApiGetClusterIncidentsRequest(\n  \"c1-de\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "response, err := client.GetClusterStatus(client.NewApiGetClusterStatusRequest(\n  \"c1-de\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "response, err := client.GetIncidents()\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "response, err := client.GetIndexingTime(client.NewApiGetIndexingTimeRequest(\n  \"c1-de\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "response, err := client.GetLatency(client.NewApiGetLatencyRequest(\n  \"c1-de\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "response, err := client.GetMetrics(client.NewApiGetMetricsRequest(\n  monitoring.Metric(\"avg_build_time\"), monitoring.Period(\"minute\"),\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "response, err := client.GetReachability(client.NewApiGetReachabilityRequest(\n  \"c1-de\",\n))\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "response, err := client.GetServers()\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "response, err := client.GetStatus()\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "err = client.SetClientApiKey(\n  \"updated-api-key\",\n)\nif err != nil {\n  // handle the eventual error\n  panic(err)\n}",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "client, err := monitoring.NewClient(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\")\nif err != nil {\n  // The client can fail to initialize if you pass an invalid parameter.\n  panic(err)\n}"
    }
  },
  "java": {
    "import": {
      "default": "import com.algolia.api.MonitoringClient;\nimport com.algolia.model.monitoring.*;"
    },
    "customDelete": {
      "default": "client.customDelete(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "client.customGet(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "client.customPost(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "client.customPut(\"test/minimal\");",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "client.getClusterIncidents(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "client.getClusterStatus(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "client.getIncidents();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "client.getIndexingTime(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "client.getLatency(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "client.getMetrics(Metric.AVG_BUILD_TIME, Period.MINUTE);",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "client.getReachability(\"c1-de\");",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "client.getServers();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "client.getStatus();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey(\"updated-api-key\");",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "MonitoringClient client = new MonitoringClient(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\");"
    }
  },
  "javascript": {
    "import": {
      "default": "import { algoliasearch } from 'algoliasearch';"
    },
    "customDelete": {
      "default": "const response = await client.customDelete({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "const response = await client.customGet({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "const response = await client.customPost({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "const response = await client.customPut({ path: 'test/minimal' });",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "const response = await client.getClusterIncidents({ clusters: 'c1-de' });",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "const response = await client.getClusterStatus({ clusters: 'c1-de' });",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "const response = await client.getIncidents();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "const response = await client.getIndexingTime({ clusters: 'c1-de' });",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "const response = await client.getLatency({ clusters: 'c1-de' });",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "const response = await client.getMetrics({ metric: 'avg_build_time', period: 'minute' });",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "const response = await client.getReachability({ clusters: 'c1-de' });",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "const response = await client.getServers();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "const response = await client.getStatus();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey({ apiKey: 'updated-api-key' });",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "//\nconst client = algoliasearch('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY').initMonitoring();"
    }
  },
  "kotlin": {
    "import": {
      "default": "import com.algolia.client.api.MonitoringClient"
    },
    "customDelete": {
      "default": "var response = client.customDelete(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "var response = client.customGet(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "var response = client.customPost(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "var response = client.customPut(\n  path = \"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "var response = client.getClusterIncidents(\n  clusters = \"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "var response = client.getClusterStatus(\n  clusters = \"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "var response = client.getIncidents()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "var response = client.getIndexingTime(\n  clusters = \"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "var response = client.getLatency(\n  clusters = \"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "var response = client.getMetrics(\n  metric = Metric.entries.first { it.value == \"avg_build_time\" },\n  period = Period.entries.first { it.value == \"minute\" },\n)",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "var response = client.getReachability(\n  clusters = \"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "var response = client.getServers()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "var response = client.getStatus()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.setClientApiKey(\n  apiKey = \"updated-api-key\",\n)",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "val client = MonitoringClient(appId = \"ALGOLIA_APPLICATION_ID\", apiKey = \"ALGOLIA_API_KEY\")"
    }
  },
  "php": {
    "import": {
      "default": "use Algolia\\AlgoliaSearch\\Api\\MonitoringClient;"
    },
    "customDelete": {
      "default": "$response = $client->customDelete(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "$response = $client->customGet(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "$response = $client->customPost(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "$response = $client->customPut(\n    'test/minimal',\n);",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "$response = $client->getClusterIncidents(\n    'c1-de',\n);",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "$response = $client->getClusterStatus(\n    'c1-de',\n);",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "$response = $client->getIncidents();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "$response = $client->getIndexingTime(\n    'c1-de',\n);",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "$response = $client->getLatency(\n    'c1-de',\n);",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "$response = $client->getMetrics(\n    'avg_build_time',\n    'minute',\n);",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "$response = $client->getReachability(\n    'c1-de',\n);",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "$response = $client->getServers();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "$response = $client->getStatus();",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "$client->setClientApiKey(\n    'updated-api-key',\n);",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "$client = MonitoringClient::create('ALGOLIA_APPLICATION_ID', 'ALGOLIA_API_KEY');"
    }
  },
  "python": {
    "import": {
      "default": "from algoliasearch.monitoring.client import MonitoringClientSync"
    },
    "customDelete": {
      "default": "response = client.custom_delete(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response = client.custom_get(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response = client.custom_post(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response = client.custom_put(\n    path=\"test/minimal\",\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "response = client.get_cluster_incidents(\n    clusters=\"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "response = client.get_cluster_status(\n    clusters=\"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "response = client.get_incidents()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "response = client.get_indexing_time(\n    clusters=\"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "response = client.get_latency(\n    clusters=\"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "response = client.get_metrics(\n    metric=\"avg_build_time\",\n    period=\"minute\",\n)",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "response = client.get_reachability(\n    clusters=\"c1-de\",\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "response = client.get_servers()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "response = client.get_status()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.set_client_api_key(\n    api_key=\"updated-api-key\",\n)",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "# In an asynchronous context, you can use MonitoringClient instead, which exposes the exact same methods.\nclient = MonitoringClientSync(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\")"
    }
  },
  "ruby": {
    "import": {
      "default": "require \"algolia\""
    },
    "customDelete": {
      "default": "response = client.custom_delete(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "response = client.custom_get(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "response = client.custom_post(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "response = client.custom_put(\"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "response = client.get_cluster_incidents(\"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "response = client.get_cluster_status(\"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "response = client.get_incidents",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "response = client.get_indexing_time(\"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "response = client.get_latency(\"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "response = client.get_metrics(\"avg_build_time\", \"minute\")",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "response = client.get_reachability(\"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "response = client.get_servers",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "response = client.get_status",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "client.set_client_api_key(\"updated-api-key\")",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "client = Algolia::MonitoringClient.create(\"ALGOLIA_APPLICATION_ID\", \"ALGOLIA_API_KEY\")"
    }
  },
  "scala": {
    "import": {
      "default": "import algoliasearch.api.MonitoringClient"
    },
    "customDelete": {
      "default": "val response = client.customDelete[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "val response = client.customGet[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "val response = client.customPost[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "val response = client.customPut[JObject](\n  path = \"test/minimal\"\n)",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "val response = client.getClusterIncidents(\n  clusters = \"c1-de\"\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "val response = client.getClusterStatus(\n  clusters = \"c1-de\"\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "val response = client.getIncidents(\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "val response = client.getIndexingTime(\n  clusters = \"c1-de\"\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "val response = client.getLatency(\n  clusters = \"c1-de\"\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "val response = client.getMetrics(\n  metric = Metric.withName(\"avg_build_time\"),\n  period = Period.withName(\"minute\")\n)",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "val response = client.getReachability(\n  clusters = \"c1-de\"\n)",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "val response = client.getServers(\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "val response = client.getStatus(\n)",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "init": {
      "default": "val client = MonitoringClient(appId = \"ALGOLIA_APPLICATION_ID\", apiKey = \"ALGOLIA_API_KEY\")"
    }
  },
  "swift": {
    "import": {
      "default": "import Monitoring"
    },
    "customDelete": {
      "default": "let response = try await client.customDelete(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customGet": {
      "default": "let response = try await client.customGet(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPost": {
      "default": "let response = try await client.customPost(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "customPut": {
      "default": "let response = try await client.customPut(path: \"test/minimal\")",
      "parameters": [
        {
          "name": "path",
          "in": "path",
          "description": "Path of the endpoint, anything after \"/1\" must be specified.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "/keys"
          }
        },
        {
          "name": "parameters",
          "in": "query",
          "description": "Query parameters to apply to the current query.",
          "schema": {
            "type": "object",
            "additionalProperties": true
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Bad request or request arguments.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "402": {
          "description": "This feature is not enabled on your Algolia account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Method not allowed with this API key.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Index not found.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Error.",
                "type": "object",
                "x-keep-model": true,
                "additionalProperties": true,
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid Application-Id or API-Key"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getClusterIncidents": {
      "default": "let response = try await client.getClusterIncidents(clusters: \"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getClusterStatus": {
      "default": "let response = try await client.getClusterStatus(clusters: \"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found.",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "NotFound": {
                  "value": "Unknown cluster \"test\""
                }
              }
            }
          }
        }
      }
    },
    "getIncidents": {
      "default": "let response = try await client.getIncidents()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "incidentsResponse",
                "type": "object",
                "properties": {
                  "incidents": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "incidents",
                      "description": "Key-value pairs with the cluster names as keys and the list of incidents reported for this cluster as values.",
                      "type": "array",
                      "items": {
                        "title": "incidentEntry",
                        "type": "object",
                        "properties": {
                          "t": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Timestamp, measured in milliseconds since the Unix epoch."
                          },
                          "v": {
                            "title": "incident",
                            "description": "Incident details.",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Description of the incident."
                              },
                              "status": {
                                "title": "status",
                                "type": "string",
                                "description": "Status of the cluster.",
                                "enum": [
                                  "operational",
                                  "degraded_performance",
                                  "partial_outage",
                                  "major_outage"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "incidents": {
                      "m134-de": [
                        {
                          "t": 1687441685000,
                          "v": {
                            "title": "Incident on cluster m134-de: Everything operating normally.\n",
                            "status": "operational"
                          }
                        },
                        {
                          "t": 1687441579000,
                          "v": {
                            "title": "Incident on cluster m134-de: We are encountering a major\nissue that impact all API calls.\n",
                            "status": "major_outage"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "getIndexingTime": {
      "default": "let response = try await client.getIndexingTime(clusters: \"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "indexingTimeResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "indexingMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "indexing": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "cluster",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "indexing": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 1562
                          },
                          {
                            "t": 1688056800000,
                            "v": 1637
                          },
                          {
                            "t": 1688057400000,
                            "v": 1754
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLatency": {
      "default": "let response = try await client.getLatency(clusters: \"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "latencyResponse",
                "type": "object",
                "properties": {
                  "metrics": {
                    "title": "latencyMetric",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "latency": {
                        "additionalProperties": {
                          "x-additionalPropertiesName": "latencies",
                          "title": "times",
                          "description": "Time measured by a probe.",
                          "type": "array",
                          "items": {
                            "title": "timeEntry",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Time in ms."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "metrics": {
                      "latency": {
                        "c16-de": [
                          {
                            "t": 1688056200000,
                            "v": 64
                          },
                          {
                            "t": 1688056800000,
                            "v": 59
                          },
                          {
                            "t": 1688057400000,
                            "v": 55
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMetrics": {
      "default": "let response = try await client.getMetrics(metric: Metric.avgBuildTime, period: Period.minute)",
      "parameters": [
        {
          "name": "metric",
          "in": "path",
          "required": true,
          "description": "Metric to report.\n\nFor more information about the individual metrics, see the description of the API response.\nTo include all metrics, use `*`.\n",
          "schema": {
            "type": "string",
            "enum": [
              "avg_build_time",
              "ssd_usage",
              "ram_search_usage",
              "ram_indexing_usage",
              "cpu_usage",
              "*"
            ],
            "example": "*"
          }
        },
        {
          "name": "period",
          "in": "path",
          "required": true,
          "description": "Period over which to aggregate the metrics:\n\n- `minute`. Aggregate the last minute. 1 data point per 10 seconds.\n- `hour`. Aggregate the last hour. 1 data point per minute.\n- `day`. Aggregate the last day. 1 data point per 10 minutes.\n- `week`. Aggregate the last week. 1 data point per hour.\n- `month`. Aggregate the last month. 1 data point per day.\n",
          "schema": {
            "type": "string",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month"
            ],
            "example": "week"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "infrastructureResponse",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metrics": {
                    "title": "metrics",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "cpu_usage": {
                        "type": "object",
                        "description": "CPU idleness in %.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_indexing_usage": {
                        "type": "object",
                        "description": "RAM used for indexing in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ram_search_usage": {
                        "type": "object",
                        "description": "RAM used for search in MB.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "ssd_usage": {
                        "type": "object",
                        "description": "Solid-state disk (SSD) usage expressed as % of RAM. \n0% means no SSD usage. A value of 50% indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.\n",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      },
                      "avg_build_time": {
                        "type": "object",
                        "description": "Average build time of the indices in seconds.",
                        "additionalProperties": {
                          "x-additionalPropertiesName": "probes",
                          "title": "probes",
                          "type": "array",
                          "items": {
                            "title": "metric",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "t": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Timestamp, measured in milliseconds since the Unix epoch."
                              },
                              "v": {
                                "type": "integer",
                                "description": "Value of the metric."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success": {
                  "value": {
                    "metrics": {
                      "cpu_usage": {
                        "s4-fr": [
                          {
                            "t": 1455101280,
                            "v": 46
                          },
                          {
                            "t": 1455101290,
                            "v": 46
                          },
                          {
                            "t": 1455101300,
                            "v": 46
                          }
                        ],
                        "c3-use-1": [
                          {
                            "t": 1455101280,
                            "v": 42
                          },
                          {
                            "t": 1455101290,
                            "v": 42
                          },
                          {
                            "t": 1455101300,
                            "v": 42
                          },
                          {
                            "t": 1455101310,
                            "v": 37
                          }
                        ],
                        "c3-use-2": [
                          {
                            "t": 1455101280,
                            "v": 56
                          },
                          {
                            "t": 1455101290,
                            "v": 56
                          },
                          {
                            "t": 1455101300,
                            "v": 56
                          },
                          {
                            "t": 1455101310,
                            "v": 56
                          },
                          {
                            "t": 1455101320,
                            "v": 51
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "title": "unauthorized",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Unauthorized": {
                  "value": {
                    "reason": "The infrastructure usage API is only available on Enterprise plans. Please contact enterprise@algolia.com for more detail."
                  }
                }
              }
            }
          }
        }
      }
    },
    "getReachability": {
      "default": "let response = try await client.getReachability(clusters: \"c1-de\")",
      "parameters": [
        {
          "name": "clusters",
          "in": "path",
          "required": true,
          "description": "Subset of clusters, separated by commas.",
          "schema": {
            "type": "string",
            "example": "c1-de,c2-de,c3-de"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "reachabilityResponse",
                "type": "object",
                "additionalProperties": {
                  "x-additionalPropertiesName": "cluster",
                  "title": "probes",
                  "description": "Probes and their response.",
                  "type": "object",
                  "additionalProperties": {
                    "x-additionalPropertiesName": "probe",
                    "type": "boolean",
                    "description": "Key-value pair with the probe name as the key and the reachability status as the value."
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "c16-de": {
                      "sdn-probe-frankfurt": false,
                      "monitoring-2": false,
                      "sdn-probe-awswest1": false
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad Request.",
          "content": {
            "application/json": {
              "schema": {
                "title": "badRequest",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "BadRequest": {
                  "value": {
                    "reason": "Unknown servers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getServers": {
      "default": "let response = try await client.getServers()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "inventoryResponse",
                "type": "object",
                "properties": {
                  "inventory": {
                    "type": "array",
                    "items": {
                      "title": "server",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server name.",
                          "example": "c16-de-1"
                        },
                        "region": {
                          "title": "region",
                          "type": "string",
                          "description": "Region where the cluster is located.",
                          "enum": [
                            "au",
                            "br",
                            "ca",
                            "de",
                            "eu",
                            "hk",
                            "in",
                            "jp",
                            "sg",
                            "uae",
                            "uk",
                            "usc",
                            "use",
                            "usw",
                            "za"
                          ],
                          "example": "de"
                        },
                        "is_slave": {
                          "type": "boolean",
                          "default": false,
                          "deprecated": true,
                          "description": "Included to support legacy applications.\nUse `is_replica` instead.\n",
                          "example": false
                        },
                        "is_replica": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether this server is a replica of another server.",
                          "example": false
                        },
                        "cluster": {
                          "type": "string",
                          "description": "Name of the cluster to which this server belongs.",
                          "example": "c16-de"
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "enum": [
                            "PRODUCTION"
                          ]
                        },
                        "type": {
                          "title": "type",
                          "type": "string",
                          "enum": [
                            "cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "inventory": [
                      {
                        "name": "c16-de-3",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-2",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      },
                      {
                        "name": "c16-de-1",
                        "region": "de",
                        "is_slave": false,
                        "is_replica": false,
                        "cluster": "c16-de",
                        "status": "PRODUCTION",
                        "type": "cluster"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "title": "forbidden",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Forbidden": {
                  "value": {
                    "reason": "invalid credentials"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getStatus": {
      "default": "let response = try await client.getStatus()",
      "parameters": [],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "title": "statusResponse",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "additionalProperties": {
                      "x-additionalPropertiesName": "cluster",
                      "title": "status",
                      "type": "string",
                      "description": "Status of the cluster.",
                      "enum": [
                        "operational",
                        "degraded_performance",
                        "partial_outage",
                        "major_outage"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "status": {
                      "c16-de": "operational"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "examples": {
                "Unauthorized": {
                  "summary": "Invalid credentials",
                  "description": "Use the Monitoring API key.",
                  "value": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "setClientApiKey": {
      "default": "try client.setClientApiKey(apiKey: \"updated-api-key\")",
      "parameters": [
        {
          "in": "query",
          "name": "apiKey",
          "description": "API key to be used from now on.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No content."
        }
      }
    },
    "init": {
      "default": "let client = try MonitoringClient(appID: \"ALGOLIA_APPLICATION_ID\", apiKey: \"ALGOLIA_API_KEY\")"
    }
  }
}